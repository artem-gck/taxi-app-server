version: "3.9"
services:
  user_service:
    container_name: user_api
    build: 
      context: .
      dockerfile: UsersService/UsersServiceApi/Dockerfile
    environment:
      UsersDbConnection: "Server=user_sql;Database=user_taxi;User=SA;Password=yourStrong(!)Password;Trust Server Certificate=true"
      ServiceBusConnection: "${BrokerConnection}"
      ASPNETCORE_ENVIRONMENT: "${Environment}"
    depends_on:
      - user_sql

  drivers_service:
    container_name: drivers_api
    build: 
      context: .
      dockerfile: DriversService/DriversServiceApi/Dockerfile
    environment:
      DriversDbConnection: "Server=drivers_sql;Database=drivers_taxi;User=SA;Password=yourStrong(!)Password;Trust Server Certificate=true"
      ServiceBusConnection: "${BrokerConnection}"
      ASPNETCORE_ENVIRONMENT: "${Environment}"
    depends_on:
      - drivers_sql

  orders_service:
    container_name: orders_api
    build: 
      context: .
      dockerfile: OrdersService/OrdersServiceApi/Dockerfile
    environment:
      OrdersDbConnection: "Server=orders_sql;Database=orders_taxi;User=SA;Password=yourStrong(!)Password;Trust Server Certificate=true"
      ServiceBusConnection: "${BrokerConnection}"
      ASPNETCORE_ENVIRONMENT: "${Environment}"
    depends_on:
      - orders_sql

  orchestrator_service:
    container_name: orchestrator_api
    build: 
      context: .
      dockerfile: OrchestratorService/OrchestratorServiceApi/Dockerfile
    environment:
      SagaConnection: "mongodb://saga_mongo"
      ServiceBusConnection: "${BrokerConnection}"
      ASPNETCORE_ENVIRONMENT: "${Environment}"

  api_gateway:
    container_name: api_gateway
    ports:
      - 8083:80
    build: 
      context: .
      dockerfile: ApiGateway/ApiGateway/Dockerfile
    environment:
      ServiceBusConnection: "${BrokerConnection}"
      ASPNETCORE_ENVIRONMENT: "${Environment}"
      UserServiceHealth: "http://user_service/health"
      DriversServiceHealth: "http://drivers_service/health"
      OrdersServiceHealth: "http://orders_service/health"
      OrchestratorServiceHealth: "http://orchestrator_service/health"
    depends_on:
      - user_service
      - drivers_service
      - orders_service
      - orchestrator_service

  user_sql:
    container_name: user_sql
    image: "mcr.microsoft.com/mssql/server"
    ports: 
      - 1433:1433
    environment:
        SA_PASSWORD: "yourStrong(!)Password"
        ACCEPT_EULA: "Y"
    volumes:
        - 'users-dbdata:/var/opt/mssql'

  drivers_sql:
    container_name: drivers_sql
    image: "mcr.microsoft.com/mssql/server"
    ports: 
      - 1434:1433
    environment:
        SA_PASSWORD: "yourStrong(!)Password"
        ACCEPT_EULA: "Y"
    volumes:
        - 'drivers-dbdata:/var/opt/mssql'

  orders_sql:
    container_name: orders_sql
    image: "mcr.microsoft.com/mssql/server"
    ports: 
      - 1435:1433
    environment:
        SA_PASSWORD: "yourStrong(!)Password"
        ACCEPT_EULA: "Y"
    volumes:
        - 'orders-dbdata:/var/opt/mssql'

volumes:
  users-dbdata:
    driver: local
  drivers-dbdata:
    driver: local
  orders-dbdata:
    driver: local
  orchestrator-dbdata:
    driver: local